{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristian\\\\Desktop\\\\Github\\\\react_complete_guide\\\\01-starting-setup\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  // We need to calculate the total maxValue:\n  // First extract the values (numbers) from the dataPoints (objects) in ExpensesChart.js/\n  // We returner an Array of values (numbers) \n  // We can use the SPREAD OPERATOR  to pull out all the array elements and add them as stand alone arguments\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues); // It receives the 12 arguments\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => {\n      /*#__PURE__*/\n      _jsxDEV(ChartBar, {\n        value: dataPoint.value,\n        maxValue: totalMaximum,\n        label: dataPoint.label\n      }, dataPoint.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Cristian/Desktop/Github/react_complete_guide/01-starting-setup/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEpB;AACA;AACA;AACA;AACA,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB,CAPoB,CAO+B;;AAEnD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,IAAe;AACnC;AAAA,cAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,SAAS,CAACC,KAFnB;AAGE,QAAA,QAAQ,EAAEC,YAHZ;AAIE,QAAA,KAAK,EAAEF,SAAS,CAACK;AAJnB,SACKL,SAAS,CAACK,KADf;AAAA;AAAA;AAAA;AAAA;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KArBQV,K;AAuBT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n\r\n  // We need to calculate the total maxValue:\r\n  // First extract the values (numbers) from the dataPoints (objects) in ExpensesChart.js/\r\n  // We returner an Array of values (numbers) \r\n  // We can use the SPREAD OPERATOR  to pull out all the array elements and add them as stand alone arguments\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues); // It receives the 12 arguments\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => {\r\n        <ChartBar\r\n        key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}