{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristian\\\\Desktop\\\\Github\\\\react_complete_guide\\\\02-starting-project\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseInput = props => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isInputValid, setIsInputValid] = useState(true); // by default, we trust that the input is valid\n\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsInputValid(true);\n    }\n\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault(); // Check if the input is empty\n\n    if (enteredValue.trim().length === 0) {\n      setIsInputValid(false); // the input is NOT valid\n\n      return; // if the result is 0, the next line of code won't be executed\n    }\n\n    props.onAddGoal(enteredValue);\n  }; //   return (\n  //     <form onSubmit={formSubmitHandler}>\n  //       <div className={`form-contol ${!isInputValid ? \"invalid\" : \"\" }`}>\n  //         <label>Course Goal</label>\n  //         <input type=\"text\" onChange={goalInputChangeHandler} />\n  //       </div>\n  //       <Button type=\"submit\">Add Goal</Button>\n  //     </form>\n  //   );\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${!isValid ? 'invalid' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CourseInput, \"EMXKhp93P3O0x7U3D7nkKjIfxHM=\");\n\n_c = CourseInput;\nexport default CourseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"sources":["C:/Users/Cristian/Desktop/Github/react_complete_guide/02-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"names":["React","useState","Button","CourseInput","props","enteredValue","setEnteredValue","isInputValid","setIsInputValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","isValid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD,CAF6B,CAG7B;;AAEA,QAAMQ,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxCN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACDF,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GALD;;AAOA,QAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN,GADmC,CAEnC;;AACA,QAAIX,YAAY,CAACQ,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AACpCN,MAAAA,eAAe,CAAC,KAAD,CAAf,CADoC,CACZ;;AACxB,aAFoC,CAE5B;AACT;;AACDJ,IAAAA,KAAK,CAACa,SAAN,CAAgBZ,YAAhB;AACD,GARD,CAZ6B,CAsB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,gBAAe,CAACG,OAAD,GAAW,SAAX,GAAuB,EAAG,EAA1D;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASC,CAzCD;;GAAMN,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isInputValid, setIsInputValid] = useState(true);\n  // by default, we trust that the input is valid\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsInputValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    // Check if the input is empty\n    if (enteredValue.trim().length === 0) {\n      setIsInputValid(false); // the input is NOT valid\n      return; // if the result is 0, the next line of code won't be executed\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n//   return (\n//     <form onSubmit={formSubmitHandler}>\n//       <div className={`form-contol ${!isInputValid ? \"invalid\" : \"\" }`}>\n//         <label>Course Goal</label>\n//         <input type=\"text\" onChange={goalInputChangeHandler} />\n//       </div>\n//       <Button type=\"submit\">Add Goal</Button>\n//     </form>\n//   );\n// };\nreturn (\n  <form onSubmit={formSubmitHandler}>\n    <div className={`form-control ${!isValid ? 'invalid' : ''}`}>\n      <label>Course Goal</label>\n      <input type=\"text\" onChange={goalInputChangeHandler} />\n    </div>\n    <Button type=\"submit\">Add Goal</Button>\n  </form>\n);\n};\n\nexport default CourseInput;\n"]},"metadata":{},"sourceType":"module"}